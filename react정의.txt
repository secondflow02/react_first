React란?
UI(User Interface)를 효과적으로 구축하기 위해 사용하는 자바스크립트 기반 라이브러이다
다른 라이브러리와 함께 사용할수 있어서 효율적이다

React의 특징

1.선언적 이다 

리액트는 대화형 UI(User Interface)를 작성하기에 유리하다. 데이터가 변경되었을 떄 효율적으로 랜더링을 수행할 수 있도록 한다.

2.컴포넌트 기반이다

캡슐화된 컴포넌트가 스스로 상태를 관리하고 복잡한 UI도 효과적으로 구성할 수 있음

3.한 번 배워서 어디에서나 사용하기

기존 소스를 불필요하게 다시 작성하지 않고 새 기능을 개발 할 수 있다.
Node 서버에서 랜더링을 할 수도 있고, 온라인 웹에서도 사용 가능하다.



<React의 동작 원리>

1. 먼저 클라이언트가 사이트에 접속한다.

2. 사이트 주소는 Domain 주소에 해당하므로, 
DNS 서버로 가서 실제 주소에 요청을 보낸다. -> 서버에 요청을 보냄

3. 서버가 클라이언트에게 응답으로 
index.html 과 APP.js를 를 보낸다. -> 번들 
(javascript, css, font, imges, ....)
    => webpack

4.이 때 React는 SPA로 Single page application이므로
index.html 하나만 존재한다.

5. 서버로 부터 받아온 파일들로 브라우저가 Render Tree를  구성하고
이를 바탕으로 실제 화면에 랜더링 한다.

=> 이를  CSR (Client-Side-Rendering) 이라 한다.


리액트의 Virtual Dom, State, ReRender, Component 뜻
 - 리액트는 Virtual Dom 이라고 하는 가상의 돔 같은 Dom tree 를 갖고 있다. 이 돔에 있는 state (상태) 값을 읽으며 상태가 바뀌면 해당 컴포넌트를 화면에 렌더링 한다. 이를 ReRender 한다고 한다. 여기서 컴포넌트란 최소한 한 가지 이상의 기능을 갖고 있는 UI 모듈이다. 이 컴포넌트들을 조립하여 하나의 페이지를 생성한다. 



<연관 개념>

Domain 주소
=> 기억 하기 어려운 IP 주소(ex:240.10.20.1) 대신 www.piar2.com 등 과 같이 도메인 이름을 붙인 주소를 의미

DNS server
=> 도메인 주소를 관리하고 있는 DNS 서버에서 자동으로 해당 도메인에 
IP 주소로 요청을 보내게 도와주는 것이 DNS의 역할

SPA
=>index.html 하나만 가지고 렌더링하며 index.html에서는 
App.js라는 스크립트 파일 하나만 로드,
이때 모든 동작을 번들러가 해결